/*PLAN OF ACTION FOR OBJECTIVES 1-4

PART 1: TAPSE WITH 30-DAY MORTALITY, HLOS, & AKI (OBJ. 1 & 2)
PART 2: RVFAC 30-DAY MORTALITY, HLOS, & AKI (OBJ. 3)
PART 3: TAPSE & LVEF INTERACTION WITH 30-DAY MORTALITY (OBJ. 4)

**************************************************************************/
%web_drop_table(WORK.IMPORT1);
FILENAME REFFILE '/home/u62404746/Ventricle Outcomes Study/Full_Patient_List_March282024.xls';
PROC IMPORT DATAFILE=REFFILE
	DBMS=XLS
	OUT=WORK.IMPORT1;
	GETNAMES=YES;
RUN;
PROC CONTENTS DATA=WORK.IMPORT1; RUN;
%web_open_table(WORK.IMPORT1);

proc freq data=WORK.IMPORT1;
table main_procedure;
run;


**************************************************************************
 
 		PART 1: TAPSE WITH 30-DAY MORTALITY, HLOS, & AKI (OBJ. 1 & 2)
 
**************************************************************************/

/*****UPLOAD TAPSE PATIENT LIST*****/
%web_drop_table(WORK.IMPORT);
FILENAME REFFILE '/home/u62404746/Ventricle Outcomes Study/TAPSE_CardSurgPatients14_March282024.xls';
PROC IMPORT DATAFILE=REFFILE
	DBMS=XLS
	OUT=WORK.IMPORT;
	GETNAMES=YES;
RUN;
PROC CONTENTS DATA=WORK.IMPORT; RUN;
%web_open_table(WORK.IMPORT);

DATA TAPSE_patient_list_proc1;
SET WORK.IMPORT;
RUN;
data TAPSE_patient_list_proc2;
set TAPSE_patient_list_proc1;
if proc_type=3 then proc_type=2;
else if proc_type=4 then proc_type=2;
else proc_type=proc_type;
run;
proc freq data=TAPSE_patient_list_proc2;
tables proc_type;
run;
/*****TAPSE AS CATEGORICAL VARIABLE****/
data TAPSE_patient_list_proc3;
set TAPSE_patient_list_proc2;
if TAPSE_numeric<17 then RV_function="abnor";
else RV_function="nor";
run;
proc freq data=TAPSE_patient_list_proc3;
table RV_function proc_type main_procedure P1Gender postop_AKI;
run;




/*****TAPSE & 30-DAY MORTALITY****/
/*****MULTIPLE IMPUTATIONS*****/
/*Step 1: Examine the pattern of missing data*/
proc mi data=TAPSE_patient_list_proc3 nimpute=0;
class CHF chroniclungdisease_STS hypertn_STS;
var CHF CrLastPreop chroniclungdisease_STS hypertn_STS;
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
ods select misspattern;
run;
/*Step 2: Imputation phase*/
proc mi data=TAPSE_patient_list_proc3 nimpute=10 out=imputed_dataset seed=54321;
class CHF thirtydaymortality chroniclungdisease_STS hypertn_STS P1Gender proc_type;
   var thirtydaymortality TAPSE_numeric Age CHF P1Gender chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;

/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset1;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') P1Gender(ref='Male') proc_type(ref="2") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=TAPSE_numeric Age CHF proc_type
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS P1Gender / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;
/*Unadjusted analysis*/
proc logistic data = imputed_dataset1;
model thirtydaymortality (event='Yes')=TAPSE_numeric / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data imputed_dataset3;
set imputed_dataset;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run;

/*****MULTIPLE IMPUTATIONS*****/

/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset3;
class CHF(ref='N') P1Gender(ref='Male') proc_type(ref='2') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=TAPSE_numeric Age hypertn_STS CHF CrLastPreop proc_type
chroniclungdisease_STS proc_length_mins P1Gender / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
estimate 'TAPSE' TAPSE_numeric 1 / exp;
lsmeans P1Gender / diff exp cl;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;
/*Unadjusted analysis*/
proc genmod data=imputed_dataset3;
model lengthofstay=TAPSE_numeric  / type3 dist=negbin link=log;
estimate 'TAPSE' TAPSE_numeric 1/ exp;
run;


/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') P1Gender(ref='Male') proc_type(ref='2') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=TAPSE_numeric Age CHF proc_type chroniclungdisease_STS 
CrLastPreop2 proc_length_mins2 hypertn_STS P1Gender/ link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;
/*Unadjusted analysis*/
proc logistic data = imputed_dataset1;
model postop_AKI (event='1')=TAPSE_numeric/ link=logit;
by _imputation_;
run;


/*******************************************************************/

/******TAPSE AS A CATEGORICAL VARIABLE*****/
/*****TAPSE & 30-DAY MORTALITY****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') RV_function(ref='nor') P1Gender(ref='Male') proc_type(ref='2') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=RV_function Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

proc logistic data = imputed_dataset1;
class RV_function(ref='nor');
model thirtydaymortality (event='Yes')=RV_function / link=logit;
by _imputation_;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/

/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset3;
class CHF(ref='N') RV_function(ref='nor') P1Gender(ref='Male') proc_type(ref='2') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=RV_function Age hypertn_STS CHF CrLastPreop P1Gender
chroniclungdisease_STS proc_length_mins  proc_type / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
lsmeans RV_function / diff exp cl;
lsmeans P1Gender / diff exp cl;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;
proc genmod data=imputed_dataset3;
class RV_function(ref='nor');
model lengthofstay=RV_function  / type3 dist=negbin link=log;
lsmeans RV_function / diff exp cl;
run;

/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') RV_function(ref='nor') proc_type(ref='2') P1Gender(ref='Male') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=RV_function Age CHF
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type P1Gender/ link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;

proc logistic data = imputed_dataset1;
class RV_function(ref='nor');
model postop_AKI (event='1')=RV_function  / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset1000000;
run;







/*****Summary statistics for Appendix*****/
/*Outcomes variables*/

proc freq data=TAPSE_patient_list_proc3;
tables thirtydaymortality;
run;
proc freq data=TAPSE_patient_list_proc3;
tables thirtydaymortality*RV_function / chisq;
run;
proc freq data=TAPSE_patient_list_proc3;
tables postop_AKI*RV_function / chisq;
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
var lengthofstay*RV_function;
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
class RV_function; /* This line specifies that statistics should be calculated for each category of RV_function */
var lengthofstay; /* Assuming lengthofstay is the correct variable name for the length of stay */
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
var lengthofstay; /* Assuming lengthofstay is the correct variable name for the length of stay */
run;


proc freq data=TAPSE_patient_list_proc3;
tables thirtydaymortality postop_AKI/missing;
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
var Lengthofstay; /*All numeric variables*/
run;

/*Case analysis of adjustment variables for imputation*/
proc means data=TAPSE_patient_list_proc3 nmiss N min median P25 P75 max mean std;
var _numeric_; /*All numeric variables*/
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max mean std median P25 P75;
var TAPSE_numeric Age CrLastPreop proc_length_mins;
where thirtydaymortality="No";
run; /*CrLastPreop needs imputations*/
proc freq data=TAPSE_patient_list_proc3;
tables ASAclass dialysis_STS P1Gender proc_type hypertn_STS CHF chroniclungdisease_STS diabetes CHF liverdisease previous_MI/missing;
where thirtydaymortality="No";
run; /*Hypertn, CHF, and CLD need imputations*/

/*Calculating BMI*/
data TAPSE_patient_list_proc3_BMI;
set TAPSE_patient_list_proc3;
if height_STS>0 then height_STS1=height_STS/100;
else height_STS=height_STS;
run;
proc print data=TAPSE_patient_list_proc3_BMI;
var height_STS1 height_STS;
run;
data TAPSE_patient_list_proc3_BMI;
set TAPSE_patient_list_proc3_BMI;
BMI=weight_STS/(height_STS1*height_STS1);
run;
proc print data=TAPSE_patient_list_proc3_BMI;
var BMI weight_STS height_STS1 height_STS;
run;
proc means data=TAPSE_patient_list_proc3_BMI nmiss N min max mean std median P25 P75;
var  BMI;
run;

/*Creating comparison groups by 30-day mortality*/
data TAPSE_patient_list_proc3_BMI;
set TAPSE_patient_list_proc3_BMI;
if thirtydaymortality="Yes" then mortality="1";
else if thirtydaymortality="No" then mortality="0";
else mortality="";
run;
proc freq data=TAPSE_patient_list_proc3_BMI;
table mortality;
run;

/*Continuous data were evaluated either with ANOVA or the Wilcoxon rank-sum test. 
Categorical data were evaluated using Fisher’s exact test*/

proc freq data=TAPSE_patient_list_proc3_BMI;
tables mortality*hypertn_STS / chisq;
run;
proc ttest data=TAPSE_patient_list_proc3_BMI;
   class mortality; /* This is the variable indicating the two patient populations */
   var age; /* This is the continuous variable you're comparing */
run;





**************************************************************************
 
 								 SUB-GROUP ANALYSIS
 
**************************************************************************/

/*CABG & Valve Procedure Difference*/
proc freq data=TAPSE_patient_list_proc3;
table P1Gender;
run;
proc freq data=TAPSE_patient_list_proc3;
tables liverdisease*P1Gender / chisq;
run;
proc freq data=TAPSE_patient_list_proc3;
tables previous_MI*postop_AKI / chisq;
run;
proc freq data=TAPSE_patient_list_proc3;
tables proc_type*postop_AKI / chisq;
run;
/*TAPSE_numeric Age CrLastPreop proc_length_mins*/
proc ttest data=TAPSE_patient_list_proc3;
class postop_AKI; /* This is the variable indicating the two patient populations */
var CrLastPreop; /* This is the continuous variable you're comparing */
run;
proc ttest data=TAPSE_patient_list_proc3;
class postop_AKI; /* This is the variable indicating the two patient populations */
var proc_length_mins; /* This is the continuous variable you're comparing */
run;
proc ttest data=TAPSE_patient_list_proc3 ;
class postop_AKI; /* This is the variable indicating the two patient populations */
var TAPSE_numeric; /* This is the continuous variable you're comparing */
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max mean std median P25 P75;
class postop_AKI;
var CrLastPreop;
run;
proc means data=TAPSE_patient_list_proc3 nmiss N min max mean std median P25 P75;
class postop_AKI;
var proc_length_mins;
run;


/*****PATIENT CHARACTERISTICS AFTER IMPUTATIONS*****/
/*The following variables have missing variables: hypertension, CHF, lung disease, and preop Cr*/

/*Summarizing the first imputed dataset*/
proc means data=imputed_dataset(where=(_Imputation_=10)) N mean std median P25 P75;
var CrLastPreop Age TAPSE_numeric proc_length_mins;
run;
proc freq data=imputed_dataset(where=(_Imputation_=10));
tables CHF chroniclungdisease_STS hypertn_STS P1Gender proc_type;
run;

/**************************************************************

						BY PROCEDURE TYPE

**************************************************************/
proc freq data=TAPSE_patient_list_proc3;
table proc_type;
run;
data imputed_dataset0;
set imputed_dataset1;
if proc_type=1 then delete;
else proc_type=proc_type;
run;
proc freq data=imputed_dataset0;
table proc_type;
run;

/*****TAPSE & 30-DAY MORTALITY****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset0;
class CHF(ref='N') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=TAPSE_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data imputed_dataset00;
set imputed_dataset0;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
run; 
data imputed_dataset000;
set imputed_dataset00;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
run;
data imputed_dataset0000;
set imputed_dataset000;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run;


/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset0000;
class CHF(ref='N') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=TAPSE_numeric Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins P1Gender / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
estimate 'TAPSE' TAPSE_numeric 1 / exp;
lsmeans P1Gender / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;

/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset0;
class CHF(ref='N') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=TAPSE_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;


/*******************************************************************/

/******TAPSE AS A CATEGORICAL VARIABLE*****/
/*****TAPSE & 30-DAY MORTALITY****/
/*****MULTIPLE IMPUTATIONS*****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset0;
class CHF(ref='N') RV_function(ref='nor') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=RV_function Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/
/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset0000;
class CHF(ref='N') RV_function(ref='nor') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=RV_function Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins P1Gender / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
lsmeans RV_function / diff exp cl;
lsmeans P1Gender / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;

/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset0;
class CHF(ref='N') RV_function(ref='nor') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=RV_function Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset130;
run;



/**************************************************************

					BY SEX (FEMALE/MALE)

**************************************************************/

proc freq data=TAPSE_patient_list_proc3;
table proc_type;
run;
data TAPSE_patient_list_proc4;
set TAPSE_patient_list_proc3;
if P1Gender="Male" then delete;
else P1Gender=P1Gender;
run;
proc freq data=TAPSE_patient_list_proc4;
table P1Gender;
run;

proc means data=TAPSE_patient_list_proc4 nmiss N min max P25 P75 median QRANGE mean std;
var lengthofstay; /* Assuming lengthofstay is the correct variable name for the length of stay */
run;
proc freq data=TAPSE_patient_list_proc4;
tables RV_function thirtydaymortality postop_AKI;
run;
proc freq data=TAPSE_patient_list_proc4;
tables thirtydaymortality*RV_function;
run;
proc freq data=TAPSE_patient_list_proc4;
tables postop_AKI*RV_function;
run;




/*Step 2: Imputation phase*/
proc mi data=TAPSE_patient_list_proc4 nimpute=15 out=imputed_dataset seed=54321;
class CHF thirtydaymortality chroniclungdisease_STS hypertn_STS proc_type;
   var thirtydaymortality TAPSE_numeric Age CHF chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;

/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset1;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=TAPSE_numeric Age CHF
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data TAPSE_patient_list_proc5;
set TAPSE_patient_list_proc4;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
run; 
data TAPSE_patient_list_proc6;
set TAPSE_patient_list_proc5;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
run;
data TAPSE_patient_list_proc7;
set TAPSE_patient_list_proc6;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run;

/*****MULTIPLE IMPUTATIONS*****/
/*Step 2: Imputation phase*/
proc mi data=TAPSE_patient_list_proc7 nimpute=15 out=imputed_dataset3 seed=54321;
class CHF thirtydaymortality chroniclungdisease_STS hypertn_STS proc_type;
   var thirtydaymortality TAPSE_numeric Age CHF chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;
/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset3;
class CHF(ref='N') proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=TAPSE_numeric Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins proc_type / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
estimate 'TAPSE' TAPSE_numeric 1 / exp;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;


/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
proc mi data=TAPSE_patient_list_proc4 nimpute=15 out=imputed_dataset seed=54321;
class CHF thirtydaymortality chroniclungdisease_STS hypertn_STS proc_type;
   var thirtydaymortality TAPSE_numeric Age CHF chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;
/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset5;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset5;
class CHF(ref='N') proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=TAPSE_numeric Age CHF chroniclungdisease_STS 
CrLastPreop2 proc_length_mins2 hypertn_STS proc_type/ link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;



/*******************************************************************/

/******TAPSE AS A CATEGORICAL VARIABLE*****/
/*****TAPSE & 30-DAY MORTALITY****/
/*****MULTIPLE IMPUTATIONS*****/
/*Step 2: Imputation phase*/
proc mi data=TAPSE_patient_list_proc4 nimpute=15 out=imputed_dataset seed=54321;
class thirtydaymortality CHF RV_function chroniclungdisease_STS hypertn_STS proc_type;
   var thirtydaymortality RV_function Age CHF chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;

/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset1;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') RV_function(ref='nor') proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=RV_function Age CHF
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;


/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data TAPSE_patient_list_proc5;
set TAPSE_patient_list_proc4;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
run; 
data TAPSE_patient_list_proc6;
set TAPSE_patient_list_proc5;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
run;
data TAPSE_patient_list_proc7;
set TAPSE_patient_list_proc6;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run;

/*****MULTIPLE IMPUTATIONS*****/
/*Step 2: Imputation phase*/
proc mi data=TAPSE_patient_list_proc7 nimpute=15 out=imputed_dataset3 seed=54321;
class thirtydaymortality CHF RV_function chroniclungdisease_STS hypertn_STS proc_type;
   var thirtydaymortality RV_function Age CHF chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;
/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset3;
class CHF(ref='N') RV_function(ref='nor') proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=RV_function Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins proc_type / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
lsmeans RV_function / diff exp cl;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;


/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
proc mi data=TAPSE_patient_list_proc4 nimpute=15 out=imputed_dataset seed=54321;
class thirtydaymortality CHF RV_function chroniclungdisease_STS hypertn_STS proc_type;
   var thirtydaymortality RV_function Age CHF chroniclungdisease_STS CrLastPreop proc_length_mins hypertn_STS proc_type;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;
/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset5;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset5;
class CHF(ref='N') RV_function(ref='nor') proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=RV_function Age CHF
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;















**************************************************************************
 
 		PART 2: RVFAC 30-DAY MORTALITY, HLOS, & AKI (OBJ. 3)
 
**************************************************************************/
%web_drop_table(WORK.IMPORT1);
FILENAME REFFILE '/home/u62404746/Ventricle Outcomes Study/RVFAC_CardSurgPatients14_March282024.xls';
PROC IMPORT DATAFILE=REFFILE
	DBMS=XLS
	OUT=WORK.IMPORT1;
	GETNAMES=YES;
RUN;
PROC CONTENTS DATA=WORK.IMPORT1; RUN;
%web_open_table(WORK.IMPORT1);
data RVFAC_patient_list;
set work.import1;
run;

/*****FIXING PROCEDURE TYPE CATEGORIZATION*****/
data RVFAC_patient_list_proc2;
set RVFAC_patient_list;
if proc_type=3 then proc_type=2;
else if proc_type=4 then proc_type=2;
else proc_type=proc_type;
run;
proc freq data=RVFAC_patient_list_proc2;
tables proc_type main_procedure;
run;

/*****RVFAC AS CATEGORICAL VARIABLE****/
data RVFAC_patient_list_proc3;
set RVFAC_patient_list_proc2;
if RV_FAC_numeric<35 then RVFAC_function="abnor";
else RVFAC_function="nor";
run;
proc freq data=RVFAC_patient_list_proc3;
table RVFAC_function P1Gender;
run;
proc means data=RVFAC_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
class RVFAC_function; /* This line specifies that statistics should be calculated for each category of RV_function */
var lengthofstay; /* Assuming lengthofstay is the correct variable name for the length of stay */
run;

/*****TAPSE & 30-DAY MORTALITY****/
/*****MULTIPLE IMPUTATIONS*****/
/*Step 1: Examine the pattern of missing data*/
proc mi data=RVFAC_patient_list_proc3 nimpute=0;
class CHF chroniclungdisease_STS hypertn_STS;
var CHF CrLastPreop chroniclungdisease_STS hypertn_STS;
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
ods select misspattern;
run;
/*Step 2: Imputation phase*/
proc mi data=RVFAC_patient_list_proc3 nimpute=20 out=imputed_dataset seed=54321;
class thirtydaymortality CHF chroniclungdisease_STS hypertn_STS P1Gender proc_type;
   var RV_FAC_numeric Age CHF P1Gender chroniclungdisease_STS 
   CrLastPreop proc_length_mins hypertn_STS proc_type thirtydaymortality;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;

proc means data=imputed_dataset(where=(_Imputation_=20)) N mean std median P25 P75;
var CrLastPreop Age RV_FAC_numeric proc_length_mins;
run;
proc freq data=imputed_dataset(where=(_Imputation_=20));
tables CHF chroniclungdisease_STS hypertn_STS P1Gender proc_type;
run;

/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset1;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') proc_type(ref="2") P1Gender(ref='Male') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=RV_FAC_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 proc_type hypertn_STS / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;
proc logistic data = imputed_dataset1;
model thirtydaymortality (event='Yes')=RV_FAC_numeric  / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data imputed_dataset10;
set imputed_dataset;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run; 

/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset10;
class CHF(ref='N') proc_type(ref="2") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=RV_FAC_numeric Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins proc_type / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
estimate 'RVFAC' RV_FAC_numeric 1 / exp;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;
proc genmod data=imputed_dataset10;
model lengthofstay=RV_FAC_numeric / type3 dist=negbin link=log;
estimate 'RVFAC' RV_FAC_numeric 2 / exp;
run;

/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') proc_type(ref="2") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=RV_FAC_numeric Age CHF
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 proc_type hypertn_STS / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;
proc logistic data = imputed_dataset1;
model postop_AKI (event='1')=RV_FAC_numeric2 / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;


/*******************************************************************/

/******RVFAC AS A CATEGORICAL VARIABLE*****/
/*****RVFAC & 30-DAY MORTALITY****/
proc logistic data = imputed_dataset1;
class CHF(ref='N') RVFAC_function(ref='nor') proc_type(ref="2") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=RVFAC_function Age CHF 
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 proc_type hypertn_STS  / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;
proc logistic data = imputed_dataset1;
class RVFAC_function(ref='nor');
model thirtydaymortality (event='Yes')=RVFAC_function / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

/*****RVFAC & HOSPITAL LENGTH OF STAY****/


data imputed_dataset10;
set imputed_dataset;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run; 
/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset10;
class CHF(ref='N') RVFAC_function(ref='nor') proc_type(ref="2") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=RVFAC_function Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins proc_type / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
lsmeans RVFAC_function / diff exp cl;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;
proc genmod data=imputed_dataset10;
class RVFAC_function(ref='nor');
model lengthofstay=RVFAC_function / type3 dist=negbin link=log;
lsmeans RVFAC_function / diff exp cl;
run;


/*****RVFAC & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') RVFAC_function(ref='nor') proc_type(ref="2") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=RVFAC_function Age CHF proc_type
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS  / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;
proc logistic data = imputed_dataset1;
class RVFAC_function(ref='nor');
model postop_AKI (event='1')=RVFAC_function / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset6;
run;


/*****Summary statistics for Appendix and Abstract*****/
/*Outcomes variables*/
proc freq data=RVFAC_patient_list_proc3;
tables thirtydaymortality postop_AKI/missing;
run;
proc means data=RVFAC_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
var Lengthofstay; /*All numeric variables*/
run;

proc freq data=RVFAC_patient_list_proc3;
tables thirtydaymortality*RVFAC_function / chisq;
run;
proc freq data=RVFAC_patient_list_proc3;
tables postop_AKI*RVFAC_function / chisq;
run;
proc means data=RVFAC_patient_list_proc3 nmiss N min max P25 P75 median QRANGE mean std;
class RVFAC_function; /* This line specifies that statistics should be calculated for each category of RV_function */
var lengthofstay; /* Assuming lengthofstay is the correct variable name for the length of stay */
run;


/*Case analysis of adjustment variables for imputation*/
proc means data=RVFAC_patient_list_proc3 nmiss N min median P25 P75 max mean std;
var _numeric_; /*All numeric variables*/
run;
proc means data=RVFAC_patient_list_proc3 nmiss N min max mean std median P25 P75;
var RV_FAC_numeric Age CrLastPreop proc_length_mins;
run; /*CrLastPreop needs imputations*/
proc freq data=RVFAC_patient_list_proc3;
tables RVFAC_function ASAclass dialysis_STS P1Gender proc_type hypertn_STS CHF chroniclungdisease_STS diabetes CHF liverdisease previous_MI/missing;
run; /*Hypertn, CHF, and CLD need imputations*/

/*Calculating BMI*/
data RVFAC_patient_list_proc3_BMI;
set RVFAC_patient_list_proc3;
if height_STS>0 then height_STS1=height_STS/100;
else height_STS=height_STS;
run;
proc print data=RVFAC_patient_list_proc3_BMI;
var height_STS1 height_STS;
run;
data RVFAC_patient_list_proc3_BMI;
set RVFAC_patient_list_proc3_BMI;
BMI=weight_STS/(height_STS1*height_STS1);
run;
proc print data=RVFAC_patient_list_proc3_BMI;
var BMI weight_STS height_STS1 height_STS;
run;
proc means data=RVFAC_patient_list_proc3_BMI nmiss N min max mean std median P25 P75;
var  BMI;
run;


/*RVFAC AND LVEF INTERACTIONS*/

proc sort data=LVEF_list;
by StudyID;
run;
proc sort data=RVFAC_patient_list_proc3;
by StudyID;
run;
data RVFAC_LVEF_interaction;
merge LVEF_list RVFAC_patient_list_proc3;
by StudyID;
run;

data RVFAC_LVEF_interaction1;
set RVFAC_LVEF_interaction;
if RV_FAC_numeric="" then delete;
else RV_FAC_numeric=RV_FAC_numeric;
run;
data RVFAC_LVEF_interaction2;
set RVFAC_LVEF_interaction1;
if LVEF_numeric="" then delete;
else LVEF_numeric=LVEF_numeric;
run;

/*Removing patients who had >1 LVEF value per echo*/
proc sort data=RVFAC_LVEF_interaction2 out=RVFAC_LVEF_interaction3;
by StudyID;
run;
proc sort data=RVFAC_LVEF_interaction3 nodupkey;
by StudyID;
run;


/*****TAPSE*LVEF INTERACTION TERM & 30-DAY MORTALITY****/
/*Step 2: Imputation phase*/
proc mi data=RVFAC_LVEF_interaction3 nimpute=15 out=imputed_dataset seed=54321;
class CHF chroniclungdisease_STS hypertn_STS P1Gender thirtydaymortality proc_type;
   var RV_FAC_numeric Age CHF P1Gender chroniclungdisease_STS 
   CrLastPreop proc_length_mins hypertn_STS proc_type thirtydaymortality;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;

/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset1;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') P1Gender(ref="Male") proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=RV_FAC_numeric LVEF_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type 
RV_FAC_numeric*LVEF_numeric/ link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;

proc logistic data = imputed_dataset1;
model thirtydaymortality (event='Yes')= RV_FAC_numeric*LVEF_numeric/ link=logit;
by _imputation_;
run;

/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data imputed_dataset3;
set imputed_dataset1;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run; 

/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset3;
class CHF(ref='N') proc_type(ref='1') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=TAPSE_numeric LVEF_numeric Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins P1Gender proc_type TAPSE_numeric*LVEF_numeric / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
estimate 'TAPSE' TAPSE_numeric 1 / exp;
estimate 'LVEF' LVEF_numeric 1 / exp;
estimate 'TAPSE*LVEF' TAPSE_numeric*LVEF_numeric 1 / exp;
lsmeans P1Gender / diff exp cl;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;

/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') P1Gender(ref="Male") proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=TAPSE_numeric LVEF_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 
hypertn_STS proc_type TAPSE_numeric*LVEF_numeric / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset10000;
run;



**************************************************************************
 
 	PART 3: TAPSE & LVEF INTERACTION WITH 30-DAY MORTALITY (OBJ. 4)
 
**************************************************************************/
%web_drop_table(WORK.IMPORT99);
FILENAME REFFILE '/home/u62404746/Ventricle Outcomes Study/LVEF_inprogress_03-06-2023.csv';
PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.IMPORT99;
	GETNAMES=YES;
RUN;
PROC CONTENTS DATA=WORK.IMPORT99; RUN;
%web_open_table(WORK.IMPORT99);
data LVEF_list;
set WORK.IMPORT99;
if LVEF_numeric="" then delete;
else LVEF_numeric=LVEF_numeric;
run;

/*TAPSE with LVEF interaction term*/
proc sort data=LVEF_list;
by StudyID;
run;
proc sort data=TAPSE_patient_list_proc3;
by StudyID;
run;
data TAPSE_LVEF_interaction;
merge LVEF_list TAPSE_patient_list_proc3;
by StudyID;
run;

data TAPSE_LVEF_interaction1;
set TAPSE_LVEF_interaction;
if TAPSE_numeric="" then delete;
else TAPSE_numeric=TAPSE_numeric;
run;
data TAPSE_LVEF_interaction2;
set TAPSE_LVEF_interaction1;
if LVEF_numeric="" then delete;
else LVEF_numeric=LVEF_numeric;
run;

/*Removing patients who had >1 LVEF value per echo*/
proc sort data=TAPSE_LVEF_interaction2 out=TAPSE_LVEF_interaction3;
by StudyID;
run;
proc sort data=TAPSE_LVEF_interaction3 nodupkey;
by StudyID;
run;


/*****TAPSE*LVEF INTERACTION TERM & 30-DAY MORTALITY****/
/*****MULTIPLE IMPUTATIONS*****/
/*Step 1: Examine the pattern of missing data*/
proc mi data=TAPSE_LVEF_interaction3 nimpute=0;
class CHF chroniclungdisease_STS hypertn_STS;
var CHF CrLastPreop chroniclungdisease_STS hypertn_STS;
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
ods select misspattern;
run;
/*Step 2: Imputation phase*/
proc mi data=TAPSE_LVEF_interaction3 nimpute=15 out=imputed_dataset seed=54321;
class CHF chroniclungdisease_STS hypertn_STS P1Gender thirtydaymortality proc_type;
   var TAPSE_numeric Age CHF P1Gender chroniclungdisease_STS 
   CrLastPreop proc_length_mins hypertn_STS proc_type thirtydaymortality;
fcs reg(CrLastPreop);
fcs discrim(CHF chroniclungdisease_STS hypertn_STS /classeffects=include);
run;

/*****PRE-OP CR & PROCEDURE LENGTH / 10 *****/
data imputed_dataset1;
set imputed_dataset;
CrLastPreop2=CrLastPreop/10;
proc_length_mins2=proc_length_mins/10;
run;
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') P1Gender(ref="Male") proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model thirtydaymortality (event='Yes')=TAPSE_numeric LVEF_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 hypertn_STS proc_type 
TAPSE_numeric*LVEF_numeric/ link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset2;
run;


/*****TAPSE & HOSPITAL LENGTH OF STAY****/
data imputed_dataset3;
set imputed_dataset1;
if lengthofstay=0 then delete;
else lengthofstay=lengthofstay;
if thirtydaymortality='Yes' then delete;
else thirtydaymortality=thirtydaymortality;
if lengthofstay>30 then lengthofstay=31;
else lengthofstay=lengthofstay;
run; 

/*Step 3: Analysis phase*/
proc genmod data=imputed_dataset3;
class CHF(ref='N') proc_type(ref='1') P1Gender(ref="Male") chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model lengthofstay=TAPSE_numeric LVEF_numeric Age hypertn_STS CHF CrLastPreop 
chroniclungdisease_STS proc_length_mins P1Gender proc_type TAPSE_numeric*LVEF_numeric / type3 dist=negbin link=log;
estimate 'Pre-operative Creatinine per 10 micromol/L increase' CrLastPreop 10 / exp;
estimate 'Procedure length per 10 minute increase' proc_length_mins 10 / exp;
estimate 'Age per 1 year increase' Age 1 / exp;
estimate 'TAPSE' TAPSE_numeric 1 / exp;
estimate 'LVEF' LVEF_numeric 1 / exp;
estimate 'TAPSE*LVEF' TAPSE_numeric*LVEF_numeric 1 / exp;
lsmeans P1Gender / diff exp cl;
lsmeans proc_type / diff exp cl;
lsmeans CHF / diff exp cl;
lsmeans chroniclungdisease_STS / diff exp cl;
lsmeans hypertn_STS / diff exp cl;
run;

/*****TAPSE & ACUTE KIDNEY INJURY WITHIN 5 DAYS****/
/*Step 3: Analysis phase*/
proc logistic data = imputed_dataset1;
class CHF(ref='N') P1Gender(ref="Male") proc_type(ref='1') chroniclungdisease_STS(ref='0') hypertn_STS(ref='N');
model postop_AKI (event='1')=TAPSE_numeric LVEF_numeric Age CHF P1Gender
chroniclungdisease_STS CrLastPreop2 proc_length_mins2 
hypertn_STS proc_type TAPSE_numeric*LVEF_numeric / link=logit;
by _imputation_;
ods output ParameterEstimates=imputed_dataset10000;
run;


/**************************************************************************
 
 	OTHER RANDOM ANALYSIS
 
**************************************************************************/

proc means data=TAPSE_patient_list_proc3;
var TAPSE_numeric;
output out=TAPSE_Summary min=min_value max=max_value;
run;
data TAPSE_patient_list_proc30;
   set TAPSE_patient_list_proc3;
   if TAPSE_numeric < 10 then TAPSE_Category = "1-9";
   else if TAPSE_numeric < 15 then TAPSE_Category = "10-14";
   else if TAPSE_numeric < 20 then TAPSE_Category = "15-19";
   else if TAPSE_numeric < 25 then TAPSE_Category = "20-24";
   else if TAPSE_numeric < 30 then TAPSE_Category = "25-29";
   else if TAPSE_numeric < 44 then TAPSE_Category = "30-43";
run;
proc sql;
   create table Counts as
   select TAPSE_Category, 
          sum(thirtydaymortality = 'Yes') as YesCount,
          sum(thirtydaymortality = 'No') as NoCount
   from TAPSE_patient_list_proc30
   group by TAPSE_Category;
quit;
data PercentageDiff;
   set Counts;
   PercentageDifference = ((YesCount) / (YesCount + NoCount)) * 100;
run;

/*Create a histogram of percentage difference per count by TAPSE category */
proc sgplot data=PercentageDiff;
   vbar TAPSE_Category / response=PercentageDifference;
   xaxis label="TAPSE Category";
   yaxis label="Percentage Difference per Count";
   keylegend / location=inside position=topright;
run;
proc sql;
   create table Counts as
   select TAPSE_Category, 
          sum(thirtydaymortality = 'Yes') as YesCount,
          sum(thirtydaymortality = 'No') as NoCount
   from TAPSE_patient_list_proc30
   group by TAPSE_Category;
quit;
data PercentageDiff;
set Counts;
PercentageDifference = ((YesCount - NoCount) / (YesCount + NoCount)) * 100;
run;

/********SPLINE MODEL OF TAPSE AND HLOS******************************************************/

/*Visualize outcome Y and predictor X*/
proc gplot data = TAPSE_patient_list_proc6;
  plot TAPSE_numeric*lengthofstay;
run;
proc transreg data=TAPSE_patient_list_proc6;
   model identity(lengthofstay) = pspline(TAPSE_numeric);
   output out = TAPSE_patient_list12 pprefix = p;
run;

/*not sure what this command is*/
legend label=none value=('y' 'predicted y') position=(bottom left inside) mode=share down = 2; 
proc gplot data = TAPSE_patient_list12;
   plot (lengthofstay plengthofstay)*TAPSE_numeric / overlay legend = legend;
run;

/*One might believe that X and Y are linearly related, but the slope of teh line changes at some point
X. In this case, you can fit one one-degree (straight line) polynomial up to the given point in X (the
"knot") and another one-degree polynomial from that point on*/

proc transreg data=TAPSE_patient_list12;
   model identity(lengthofstay) = pspline(TAPSE_numeric / nknots=0 degree = 1);
   output out = k0d1 PPREFIX =k0d1;
run;
proc gplot data = k0d1;
   plot (lengthofstay k0d1lengthofstay)*TAPSE_numeric / overlay legend = legend;
run;

/*Improve fit of the above model by fitting 2 second-degree polynomials*/
proc transreg data=TAPSE_patient_list_proc6;
   model identity(lengthofstay) = pspline(TAPSE_numeric / nknots=1 degree = 2);
   output out = k1d2 PPREFIX =k1d2;
run;
proc gplot data = k1d2;
   plot (lengthofstay k1d2lengthofstay)*TAPSE_numeric / overlay legend = legend;
run;

/*Trying varying knots and degrees to show how the fit improves*/
proc transreg data=TAPSE_patient_list_proc6;
   model identity(lengthofstay) = pspline(TAPSE_numeric / nknots=8 degree = 7);
   output out = k8d7 PPREFIX =k8d7;
run;
proc gplot data = k8d7;
   plot (lengthofstay k8d7lengthofstay)*TAPSE_numeric / overlay legend = legend;
run;
